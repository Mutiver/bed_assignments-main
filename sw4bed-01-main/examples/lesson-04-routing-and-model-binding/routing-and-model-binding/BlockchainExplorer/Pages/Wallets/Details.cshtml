@page "/Wallets/{wallet:minlength(26):maxlength(35)}"
@model BlockchainExplorer.Pages.Wallets.DetailsModel
@{
  ViewData["Title"] = "Wallets 💰 – " + Model.Wallet;
}
<h1>Wallet</h1>
<h3><code>@Model.Wallet</code></h3>
<h4 class="mt-4">Sent ➡️</h4>
<ul class="list-group">
  @foreach (var t in Model.Transactions.Select(t => t).ToList().Where(t => t.Sender.Equals(Model.Wallet)).ToList())
  {
    <li class="list-group-item d-flex justify-content-between align-items-start">
      <div class="ms-2 me-auto">
        <div class="fw-bold">@DateTimeOffset.FromUnixTimeSeconds(@t.Timestamp).DateTime.Date.ToLongDateString()</div>
        <div class="fs-6 text-muted">@t.Timestamp</div>
        <code><a href='@(Url.Page("/Wallets/Details", new { wallet = t.Recipient}))'>@t.Recipient</a></code>
      </div>
      <span class="badge bg-primary rounded-pill align-self-center">@t.Amount</span>
    </li>
  }
</ul>
<h4 class="mt-4">Received ⬅️</h4>
<ul class="list-group">
@foreach (var t in Model.Transactions.Select(t => t).ToList().Where(t => t.Recipient.Equals(Model.Wallet)).ToList())
{
  <li class="list-group-item d-flex justify-content-between align-items-start">
    <div class="ms-2 me-auto">
      <div class="fw-bold">@DateTimeOffset.FromUnixTimeSeconds(@t.Timestamp).DateTime.Date.ToLongDateString()</div>
      <div class="fs-6 text-muted">@t.Timestamp</div>
      <code><a href='@(Url.Page("/Wallets/Details", new { wallet = t.Sender}))'>@t.Sender</a></code>
    </div>
    <span class="badge bg-primary rounded-pill align-self-center">@t.Amount</span>
  </li>
}
</ul>
  